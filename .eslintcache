
[{"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\index.js":"1","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Login.js":"2","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Profile.js":"3","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Donations.js":"4","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\redux\\actions.js":"5","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\WeatherBar.js":"6","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Register.js":"7","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\UserPage.js":"8","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Home.js":"9"},{"size":203,"mtime":1611690013929,"results":"10","hashOfConfig":"11"},{"size":2288,"mtime":1611764444814,"results":"12","hashOfConfig":"11"},{"size":1682,"mtime":1611764494945,"results":"13","hashOfConfig":"11"},{"size":4186,"mtime":1611774070214,"results":"14","hashOfConfig":"11"},{"size":92,"mtime":1611690013935,"results":"15","hashOfConfig":"11"},{"size":3082,"mtime":1611764689321,"results":"16","hashOfConfig":"11"},{"size":4135,"mtime":1611764444814,"results":"17","hashOfConfig":"11"},{"size":3173,"mtime":1611764494949,"results":"18","hashOfConfig":"11"},{"size":2174,"mtime":1611765622021,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1vpxveh",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\index.js",[],["42","43"],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Login.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Profile.js",["44","45","46","47","48","49","50","51","52","53","54","55"],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Donations.js",["56","57"],"import React, { useState } from 'react';\r\nimport { Button, Form, Icon, Confirm, Message } from 'semantic-ui-react';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/react-hooks';\r\n\r\nimport { useForm } from '../util/hooks';\r\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\r\n\r\nfunction Donations(props) {\r\n  const { values, onChange, onSubmit } = useForm(createPostCallback, {\r\n    body: '',\r\n    title: 'Donations',\r\n    img: 'https://cdn4.iconfinder.com/data/icons/care-and-help/50/38-512.png'\r\n  });\r\n  const [value, setValue] = useState('Wolfo Wildlife Preserve')\r\n  const [confirmOpen, setConfirmOpen] = useState(false);\r\n  const [confirmation, setConfirmation] = useState(false)\r\n  function handleChange (e)\r\n  {\r\n    setValue(e.target.innerText)\r\n  }\r\n\r\n\r\n  const [createPost, {error}] = useMutation(CREATE_POST_MUTATION, {\r\n    variables: values,\r\n    update(proxy,result){\r\n        const data = proxy.readQuery({\r\n            query: FETCH_POSTS_QUERY\r\n        })\r\n        const posts = [result.data.createPost, ...data.getPosts];\r\n        values.body = words;\r\n        console.log(posts)\r\n        proxy.writeQuery({ query: FETCH_POSTS_QUERY, data: { getPosts: posts } });\r\n        \r\n        \r\n    },\r\n    onError(err){\r\n        return err;\r\n    }\r\n})\r\n\r\n  function createPostCallback() {\r\n    setConfirmOpen(false)\r\n    setConfirmation(true)\r\n    setTimeout(setConfirmation, 3000)\r\n    values.body = donationScript\r\n    createPost();\r\n  }\r\n  \r\n  console.log(values.body.split())\r\n  console.log(values)\r\n  console.log('Donated $'+Math.round(values.body *100)/100+' to the '+value+\"!\")\r\n  let words = \"Are you sure you want to donate $\"+values.body+\" to \"+value+\"?\";\r\n  let donationScript = \"Donated $\"+values.body+\" to \"+value+\"!\"\r\n\r\n  return (\r\n    <div style={{width:\"30rem\", margin:\"3rem auto 3rem auto\",background:\"\", borderRadius:\"0.5rem\"}}>\r\n      <Form className=\"ui form\" onSubmit={() => setConfirmOpen(true)}>\r\n        <h2>Donate to a Foundation:</h2>\r\n        <Form.Field>\r\n        <Form.Radio\r\n            label='Wolfo Wildlife Preserve'\r\n            value ='wwp'\r\n            checked={value === 'Wolfo Wildlife Preserve'}\r\n            onChange={handleChange}\r\n          />\r\n           <Form.Radio\r\n            label='Goldies Fish Swimmy Conservative'\r\n            value ='gfsc'\r\n            checked={value === 'Goldies Fish Swimmy Conservative'}\r\n            onChange={handleChange}\r\n          />\r\n          <Form.Radio\r\n            label='Air Boy Cleaner Corp'\r\n            value ='abcc'\r\n            checked={value === 'Air Boy Cleaner Corp'}\r\n            onChange={handleChange}\r\n          />\r\n          <Form.Input required\r\n            placeholder=\"$.$$\"\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            name=\"body\"\r\n            onChange={onChange}\r\n            value={values.body}\r\n            error={error ? true : false}\r\n          />\r\n          <Button animated type=\"submit\" color=\"green\">\r\n          <Button.Content visible>Donate</Button.Content>\r\n      <Button.Content hidden>\r\n      <Icon name='arrow right' />\r\n      </Button.Content>\r\n          </Button>\r\n        </Form.Field>\r\n      </Form>\r\n      <Confirm\r\n        open={confirmOpen}\r\n        onCancel={() => setConfirmOpen(false)}\r\n        content ={words}\r\n        onConfirm={createPostCallback}\r\n    />\r\n    {confirmation ?(<p>Thank You For Kind Donation!!!</p>):(\"\")}\r\n      {error && (\r\n        <div className=\"ui error message\" style={{ marginBottom: 20 }}>\r\n          <ul className=\"list\">\r\n            <li>{console.log(JSON.stringify(error, null, 2))}</li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CREATE_POST_MUTATION = gql`\r\n  mutation createPost($title: String!, $img: String ,$body: String!) {\r\n    createPost( title: $title, img: $img ,body: $body) {\r\n      id\r\n      title\r\n      img\r\n      body\r\n      createdAt\r\n      causes\r\n      username\r\n      likes {\r\n        id\r\n        username\r\n        createdAt\r\n      }\r\n      likeCount\r\n      comments {\r\n        id\r\n        body\r\n        username\r\n        createdAt\r\n      }\r\n      commentCount\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Donations;","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\redux\\actions.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\WeatherBar.js",["58"],"import React from 'react'\r\nimport { Table, Image, Flag } from 'semantic-ui-react'\r\nimport dateFormat from 'dateformat'\r\n\r\n\r\nexport default function WeatherBar({weatherStuff}) {\r\n  \r\n    let aqi;\r\n    let words, usaqiwords, area, caqiwords, time, temp, link =\"https://www.airvisual.com/images/\";\r\n    let t = document.getElementById(\"banner\");\r\n\r\n\r\n\r\n    if(t !== null && weatherStuff.data!== undefined)\r\n    {\r\n        aqi = weatherStuff.data.current.pollution.aqius;\r\n\r\n        if(aqi <= 50)\r\n        {\r\n\r\n         t.style.background = \"linear-gradient(90deg, #56ab2f 0%, #FFFFFF 100%)\"; //green\r\n         //t.style.background= \"url(https://png.pngtree.com/thumb_back/fw800/back_pic/00/05/33/86562656f65b38e.png)\"\r\n         t.style.color = \"black\"\r\n\r\n         words = \"Good\"\r\n         \r\n        }\r\n\r\n        else if(aqi <= 100)\r\n        {\r\n        t.style.background = \"linear-gradient(90deg, #fffc00 0%, #FFFFFF 100%)\"; //green\r\n        t.style.color = \"black\"\r\n         words = \"Moderate\"\r\n        }\r\n        \r\n        else if(aqi <= 150)\r\n        {\r\n        t.style.background = \"linear-gradient(90deg, #f12711 0%, #f5af19 100%)\"; //green\r\n         t.style.color = \"white\"\r\n         words = \"Unhealthy for sensitive groups\"\r\n        }\r\n\r\n        else if(aqi <= 200)\r\n        {\r\n        t.style.background = \"linear-gradient(90deg, #ff416c 0%, #ff4b2b 100%)\"; //green\r\n         t.style.color = \"white\"\r\n         words = \"Unhealthy\"\r\n        }\r\n\r\n        else if(aqi <= 300)\r\n        {\r\n         t.style.background =\"#7e2b7d\" //purple\r\n         t.style.color = \"white\"\r\n         words = \"Very Unhealthy\"\r\n        }\r\n\r\n        else if(aqi <= 500)\r\n        {\r\n         t.style.background =\"#480d27\" //dark purple\r\n         t.style.color = \"white\"\r\n         words = \"Hazardous\"\r\n        }\r\n       \r\n    \r\n    if(weatherStuff.data.country === \"USA\")\r\n        temp = (weatherStuff.data.current.weather.tp *(9/5)+35)+\"°F\"\r\n       \r\n    else\r\n    temp = weatherStuff.data.current.weather.tp+\"°C\"\r\n    link = link + weatherStuff.data.current.weather.ic+\".png\"\r\n    usaqiwords = \"Air Quality Index according to the US: \"+ weatherStuff.data.current.pollution.aqius\r\n    caqiwords = \"Air Quality Index according to China: \"+ weatherStuff.data.current.pollution.aqicn\r\n    words = \"Air Quality: \" +words;\r\n    time=dateFormat(weatherStuff.data.current.weather.ts, \"dddd, mmmm dS, yyyy\")\r\n    area = weatherStuff.data.city+\", \"+weatherStuff.data.state\r\n    }\r\n    return (\r\n        <div>\r\n         <Table id=\"banner\" style={{ margin:\"0 auto 1rem auto\",padding:\"2rem\",borderRadius:\"5%\", width:\"50%\", border:\"0.2rem solid white\"}}>\r\n             <h1>{area}</h1>\r\n             <tr><td style={{fontSize:\"large\"}}>{usaqiwords} <br/><br/><p >{caqiwords}</p></td><td style={{fontSize:\"large\"}}>\r\n                {time}\r\n                <br/>\r\n                <br/>\r\n                 <Image src = {link} size=\"tiny\" verticalAlign='middle'/>{temp}\r\n                 </td></tr>\r\n                 <tr><td style={{fontSize:\"large\"}}>{words}</td></tr>\r\n                 </Table>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Register.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\UserPage.js",["59","60","61","62","63","64"],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Home.js",["65","66"],"import React, { useEffect , useState} from 'react';\r\nimport axios from \"axios\";\r\nimport WeatherBar from '../components/WeatherBar'\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { Grid} from 'semantic-ui-react'\r\nimport PostCard from '../components/PostCard';\r\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\r\nimport {connect} from 'react-redux'\r\nimport { SAVE_ALL_POSTS } from '../redux/actions';\r\nimport vid from \"../Pexels Videos 1204911.mp4\"\r\nimport ControlledCarousel from \"../components/MyCarousel\"\r\n\r\n\r\nconst  Home = ({ save}) => {\r\n\r\n\r\n  //const { user } = useContext(AuthContext);\r\n  const  [weather, setWeather ] = useState({}) \r\n\r\n  const {\r\n    loading,\r\n    data: { getPosts: postsFromDB } = {}\r\n    } = useQuery(FETCH_POSTS_QUERY);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n  save(SAVE_ALL_POSTS, postsFromDB)\r\n\r\n\r\n  \r\n  axios\r\n      .get(\r\n       // \"https://api.airvisual.com/v2/nearest_city?key=bb37c382-bd04-439e-a6f7-6970a3739b22\"\r\n      )\r\n      .then((res) => {\r\n        setWeather(res.data)\r\n      })\r\n      .catch((err) => console.log(err));\r\n    \r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n\r\n      <video src ={vid} autoPlay loop muted/>\r\n     \r\n      <WeatherBar weatherStuff={weather} /> \r\n <ControlledCarousel />\r\n      <Grid.Row className=\"page-title\">\r\n <p style={{margin:\"0 0 0 0 \", fontFamily:\"Impact, fantasy\"}}>Trending</p>\r\n      </Grid.Row>\r\n      <Grid.Column centered columns={4}>\r\n        {loading ? (\r\n          <p>Loading posts..</p>\r\n        ) : ( \r\n          <div>\r\n            {\r\n              postsFromDB.map((post) => (\r\n\r\n                <div key={post.id}  >\r\n                  <Grid>\r\n                  <PostCard post={post} />\r\n                  </Grid>\r\n                </div> \r\n              ) )}\r\n          </div>\r\n          \r\n        )}\r\n      </Grid.Column>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => (\r\n  console.log(\"state from home is: \",state),\r\n{\r\n  posts: state.posts\r\n});\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    \r\n    save: (type,data) => dispatch({ type:type, payload:data}),\r\n    }\r\n }\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":16,"nodeType":"73","messageId":"74","endLine":1,"endColumn":24},{"ruleId":"71","severity":1,"message":"75","line":1,"column":26,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"76","line":2,"column":9,"nodeType":"73","messageId":"74","endLine":2,"endColumn":15},{"ruleId":"71","severity":1,"message":"77","line":2,"column":31,"nodeType":"73","messageId":"74","endLine":2,"endColumn":38},{"ruleId":"71","severity":1,"message":"78","line":2,"column":46,"nodeType":"73","messageId":"74","endLine":2,"endColumn":50},{"ruleId":"71","severity":1,"message":"79","line":2,"column":52,"nodeType":"73","messageId":"74","endLine":2,"endColumn":56},{"ruleId":"71","severity":1,"message":"80","line":2,"column":58,"nodeType":"73","messageId":"74","endLine":2,"endColumn":63},{"ruleId":"71","severity":1,"message":"81","line":2,"column":65,"nodeType":"73","messageId":"74","endLine":2,"endColumn":69},{"ruleId":"71","severity":1,"message":"82","line":2,"column":71,"nodeType":"73","messageId":"74","endLine":2,"endColumn":80},{"ruleId":"71","severity":1,"message":"83","line":5,"column":10,"nodeType":"73","messageId":"74","endLine":5,"endColumn":27},{"ruleId":"71","severity":1,"message":"84","line":7,"column":10,"nodeType":"73","messageId":"74","endLine":7,"endColumn":18},{"ruleId":"71","severity":1,"message":"85","line":12,"column":5,"nodeType":"73","messageId":"74","endLine":12,"endColumn":16},{"ruleId":"71","severity":1,"message":"86","line":2,"column":39,"nodeType":"73","messageId":"74","endLine":2,"endColumn":46},{"ruleId":"71","severity":1,"message":"87","line":10,"column":29,"nodeType":"73","messageId":"74","endLine":10,"endColumn":37},{"ruleId":"71","severity":1,"message":"88","line":2,"column":24,"nodeType":"73","messageId":"74","endLine":2,"endColumn":28},{"ruleId":"71","severity":1,"message":"78","line":2,"column":46,"nodeType":"73","messageId":"74","endLine":2,"endColumn":50},{"ruleId":"71","severity":1,"message":"79","line":2,"column":52,"nodeType":"73","messageId":"74","endLine":2,"endColumn":56},{"ruleId":"71","severity":1,"message":"81","line":2,"column":65,"nodeType":"73","messageId":"74","endLine":2,"endColumn":69},{"ruleId":"71","severity":1,"message":"82","line":2,"column":71,"nodeType":"73","messageId":"74","endLine":2,"endColumn":80},{"ruleId":"71","severity":1,"message":"89","line":23,"column":17,"nodeType":"73","messageId":"74","endLine":23,"endColumn":23},{"ruleId":"71","severity":1,"message":"90","line":27,"column":5,"nodeType":"73","messageId":"74","endLine":27,"endColumn":12},{"ruleId":"91","severity":1,"message":"92","line":42,"column":6,"nodeType":"93","endLine":42,"endColumn":8,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":81,"column":44,"nodeType":"97","messageId":"98","endLine":81,"endColumn":45},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'Icon' is defined but never used.","'Card' is defined but never used.","'Modal' is defined but never used.","'Form' is defined but never used.","'Container' is defined but never used.","'FETCH_POSTS_QUERY' is defined but never used.","'useQuery' is defined but never used.","'Globalposts' is assigned a value but never used.","'Message' is defined but never used.","'onSubmit' is assigned a value but never used.","'Flag' is defined but never used.","'logout' is assigned a value but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'postsFromDB' and 'save'. Either include them or remove the dependency array. If 'save' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["101"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [postsFromDB, save]",{"range":"104","text":"105"},[1074,1076],"[postsFromDB, save]"]
