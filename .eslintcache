[{"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\index.js":"1","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\App.js":"2","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\MenuBar.js":"3","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\ApolloProvider.js":"4","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\util\\AuthRoute.js":"5","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Home.js":"6","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\redux\\reducer.js":"7","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Login.js":"8","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Register.js":"9","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\UserPage.js":"10","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\context\\auth.js":"11","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\PostCard.js":"12","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\PostForm.js":"13","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\util\\hooks.js":"14","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\redux\\actions.js":"15","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\util\\graphql.js":"16","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\WeatherBar.js":"17","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Profile.js":"18","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\DeleteButton.js":"19","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\util\\PopUp.js":"20","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Donations.js":"21"},{"size":203,"mtime":1611690013929,"results":"22","hashOfConfig":"23"},{"size":1373,"mtime":1611704391494,"results":"24","hashOfConfig":"23"},{"size":1880,"mtime":1611690630907,"results":"25","hashOfConfig":"23"},{"size":918,"mtime":1611690013917,"results":"26","hashOfConfig":"23"},{"size":436,"mtime":1611690013937,"results":"27","hashOfConfig":"23"},{"size":2070,"mtime":1611694302110,"results":"28","hashOfConfig":"23"},{"size":734,"mtime":1611697405618,"results":"29","hashOfConfig":"23"},{"size":2288,"mtime":1611690630916,"results":"30","hashOfConfig":"23"},{"size":4135,"mtime":1611690630920,"results":"31","hashOfConfig":"23"},{"size":3168,"mtime":1611704327623,"results":"32","hashOfConfig":"23"},{"size":1337,"mtime":1611690013927,"results":"33","hashOfConfig":"23"},{"size":3785,"mtime":1611690630909,"results":"34","hashOfConfig":"23"},{"size":2792,"mtime":1611690630911,"results":"35","hashOfConfig":"23"},{"size":415,"mtime":1611690013940,"results":"36","hashOfConfig":"23"},{"size":92,"mtime":1611600698619,"results":"37","hashOfConfig":"23"},{"size":374,"mtime":1611690013938,"results":"38","hashOfConfig":"23"},{"size":2963,"mtime":1611690630912,"results":"39","hashOfConfig":"23"},{"size":2129,"mtime":1611697696620,"results":"40","hashOfConfig":"23"},{"size":1993,"mtime":1611690630905,"results":"41","hashOfConfig":"23"},{"size":208,"mtime":1611690630924,"results":"42","hashOfConfig":"23"},{"size":4011,"mtime":1611709195563,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vpxveh",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\index.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\App.js",["93"],"\r\nimport React, { useContext } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport {createStore} from'redux'\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { AuthProvider } from \"./context/auth\";\r\nimport AuthRoute from './util/AuthRoute';\r\n\r\nimport './App.css';\r\nimport reducer from './redux/reducer'\r\nimport MenuBar from './components/MenuBar';\r\nimport Home from './pages/Home';\r\nimport Register from './pages/Register';\r\nimport UsersPage from './pages/UserPage';\r\nimport Login from './pages/Login';\r\nimport Profile from './pages/Profile';\r\nimport Donations from './pages/Donations';\r\n\r\n\r\n function App() {\r\n\r\n  const initialState = {\r\n    posts: [],\r\n    user: null\r\n  }\r\n\r\n  const store = createStore(reducer, initialState);\r\n\r\n  return (\r\n    \r\n    <AuthProvider>\r\n    <Provider store={store}>\r\n      <Router>\r\n       \r\n          <MenuBar />\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/users\" component={UsersPage} />\r\n          <AuthRoute exact path=\"/login\" component={Login} />\r\n          <AuthRoute exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/profile/:username\" component={Profile}/>\r\n          <Route exact path = \"/Donations/:username\" component = {Donations}/>\r\n      </Router>\r\n    </Provider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\MenuBar.js",[],["94","95"],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\ApolloProvider.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\util\\AuthRoute.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Home.js",["96"],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\redux\\reducer.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Login.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Register.js",[],["97","98"],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\UserPage.js",["99","100","101","102","103","104","105","106"],"import React, {useState, useContext, useEffect} from 'react'\r\nimport {Button, Grid, Header, Divider, Image,Icon, Card, Modal, Form, Container} from 'semantic-ui-react'\r\nimport '../App.css'\r\nimport { connect } from 'react-redux'\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\r\nimport { SAVE_ALL_POSTS } from '../redux/actions';\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport PostCard from '../components/PostCard';\r\nimport PostForm from '../components/PostForm';\r\nimport { AuthContext } from '../context/auth';\r\n\r\n\r\n//let Globalposts = []\r\nfunction UsersPage({posts = [], save}) {\r\n\r\n\r\n\r\n  const [open, setOpen] = useState(false)\r\n  const { user, logout } = useContext(AuthContext);\r\n\r\n\r\n  const {\r\n    loading,\r\n    data: { getPosts: postsFromDB } = {}\r\n    } = useQuery(FETCH_POSTS_QUERY);\r\n\r\n\r\n    useEffect(() => {\r\n      save(SAVE_ALL_POSTS, postsFromDB)\r\n    \r\n\r\n  })\r\n\r\n\r\nreturn (\r\n\r\n    <div style={{backgroundImage: \"linear-gradient(#F7F8F8 0%, #ACBB78 100%)\"}}>\r\n    <Header as='h2' icon textAlign='center'>\r\n        <Image src='https://www.kindpng.com/picc/m/285-2856724_user-avatar-enter-free-photo-user-avatar-green.png' circular />\r\n        <Header.Content>{user ? user.username : null}</Header.Content>\r\n    </Header>\r\n    <Grid>\r\n    <Grid.Column textAlign= 'center'>\r\n      <Button as={Link} to={`/Donations/${user.username}`}>Donation</Button>\r\n    <Modal\r\n    style={{width:\"30rem\"}}\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      trigger={\r\n        <Button \r\n        >Show Info</Button>}\r\n      >\r\n      <Modal.Header >Your Information</Modal.Header>\r\n\r\n      <div class=\"ui list\" style={{alignItems:\"center\"}}>\r\n  <div class=\"item\">\r\n    <i class=\"user icon\"></i>\r\n    <div class=\"content\">\r\n    {user ? user.username : null}\r\n    </div>\r\n  </div>\r\n  <div class=\"item\">\r\n    <i class=\"marker icon\"></i>\r\n    <div class=\"content\">\r\n      New York, NY\r\n    </div>\r\n  </div>\r\n  <div class=\"item\">\r\n    <i class=\"mail icon\"></i>\r\n    <div class=\"content\">\r\n      <a href=\"mailto:jack@semantic-ui.com\">{user ? user.email : null} </a>\r\n    </div>\r\n  </div>\r\n</div>\r\n      <Modal.Actions>\r\n        <Button color='black' onClick={() => setOpen(false)}>\r\n          Go Back\r\n        </Button>\r\n      </Modal.Actions>\r\n      \r\n    </Modal>\r\n    </Grid.Column> \r\n    </Grid>\r\n    <PostForm />\r\n\r\n    <Grid.Column centered columns={1}>   \r\n          <>\r\n            { \r\n              posts.map((post) => (\r\n                user && post.username === user.username ?\r\n                <div key={post.id}  >\r\n                  <Grid>\r\n                  <PostCard post={post} />\r\n                  </Grid>\r\n                </div> : null\r\n              )) \r\n           }\r\n          </> \r\n      </Grid.Column>\r\n     \r\n\r\n</div>\r\n)\r\n}   \r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => (console.log(\"state is: \",state),{\r\n  posts: state.posts\r\n});\r\nconst mapDispatchToProps = (dispatch) => { \r\n  return {\r\n    save: (type,data) => dispatch({ type:type, payload:data}),\r\n  }\r\n }\r\n\r\n\r\nexport default connect (mapStateToProps,mapDispatchToProps)(UsersPage)\r\n\r\n","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\context\\auth.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\PostCard.js",["107"],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\PostForm.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\util\\hooks.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\redux\\actions.js",[],["108","109"],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\util\\graphql.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\WeatherBar.js",["110"],"import React from 'react'\r\nimport { Table, Image, Flag } from 'semantic-ui-react'\r\nimport dateFormat from 'dateformat'\r\n\r\n\r\nexport default function WeatherBar({weatherStuff}) {\r\n  \r\n    let aqi;\r\n    let words, usaqiwords, area, caqiwords, time, temp, link =\"https://www.airvisual.com/images/\";\r\n    let t = document.getElementById(\"banner\");\r\n\r\n\r\n    if(t !== null && weatherStuff.data!== undefined)\r\n    {\r\n        aqi = weatherStuff.data.current.pollution.aqius;\r\n\r\n        if(aqi <= 50)\r\n        {\r\n         t.style.background = \"linear-gradient(to right, #DCE35B 0%, #45B649 100%)\"; //green\r\n         //t.style.backgroundImage= \"url(https://images.unsplash.com/photo-1524535412680-21809efc44e7?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&q=80)\"\r\n         t.style.color = \"black\"\r\n         t.style.width=\"50%\"\r\n         t.style.margin=\"2rem auto 2rem auto\"\r\n         t.style.borderRadius=\"5%\"\r\n         words = \"Good\"\r\n         \r\n        }\r\n\r\n        else if(aqi <= 100)\r\n        {\r\n         t.style.background =\"#f3ec19\" //yellow\r\n         t.style.color = \"black\"\r\n         words = \"Moderate\"\r\n        }\r\n        \r\n        else if(aqi <= 150)\r\n        {\r\n         t.style.background =\"#f57e20\" //orange\r\n         t.style.color = \"white\"\r\n         words = \"Unhealthy for sensitive groups\"\r\n        }\r\n\r\n        else if(aqi <= 200)\r\n        {\r\n         t.style.background =\"#ed1d24\" //red\r\n         t.style.color = \"white\"\r\n         words = \"Unhealthy\"\r\n        }\r\n\r\n        else if(aqi <= 300)\r\n        {\r\n         t.style.background =\"#7e2b7d\" //purple\r\n         t.style.color = \"white\"\r\n         words = \"Very Unhealthy\"\r\n        }\r\n\r\n        else if(aqi <= 500)\r\n        {\r\n         t.style.background =\"#480d27\" //dark purple\r\n         t.style.color = \"white\"\r\n        \r\n         words = \"Hazardous\"\r\n        }\r\n       \r\n    \r\n    if(weatherStuff.data.country === \"USA\")\r\n        temp = (weatherStuff.data.current.weather.tp *(9/5)+35)+\"°F\"\r\n       \r\n    else\r\n    temp = weatherStuff.data.current.weather.tp+\"°C\"\r\n    link = link + weatherStuff.data.current.weather.ic+\".png\"\r\n    usaqiwords = \"Air Quality Index according to the US: \"+ weatherStuff.data.current.pollution.aqius\r\n    caqiwords = \"Air Quality Index according to China: \"+ weatherStuff.data.current.pollution.aqicn\r\n    words = \"Air Quality: \" +words;\r\n    time=dateFormat(weatherStuff.data.current.weather.ts, \"dddd, mmmm dS, yyyy\")\r\n    area = weatherStuff.data.city+\", \"+weatherStuff.data.state\r\n    }\r\n    return (\r\n        <div>\r\n         <Table id=\"banner\">\r\n             <h1>{area}</h1>\r\n             <tr><td>{usaqiwords} <br/><br/>{caqiwords}</td><td>\r\n                {time}\r\n                <br/>\r\n                <br/>\r\n                 <Image src = {link} size=\"tiny\" verticalAlign='middle'/>{temp}\r\n                 </td></tr>\r\n                 <tr><td>{words}</td></tr>\r\n                 </Table>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Profile.js",["111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128"],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\DeleteButton.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\util\\PopUp.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Donations.js",["129"],"import React, { useState } from 'react';\r\nimport { Button, Form, Icon, Confirm } from 'semantic-ui-react';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/react-hooks';\r\n\r\nimport { useForm } from '../util/hooks';\r\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\r\n\r\nfunction Donations(props) {\r\n  const { values, onChange, onSubmit } = useForm(createPostCallback, {\r\n    body: '',\r\n    title: 'Donations',\r\n    img: 'https://cdn4.iconfinder.com/data/icons/care-and-help/50/38-512.png'\r\n  });\r\n  const [value, setValue] = useState('')\r\n  let username = props.match.params.username;\r\n  const [confirmOpen, setConfirmOpen] = useState(false);\r\n  function handleChange (e)\r\n  {\r\n    setValue(e.target.innerText)\r\n  }\r\n\r\n\r\n  const [createPost, {error}] = useMutation(CREATE_POST_MUTATION, {\r\n    variables: values,\r\n    update(proxy,result){\r\n        const data = proxy.readQuery({\r\n            query: FETCH_POSTS_QUERY\r\n        })\r\n        const posts = [result.data.createPost, ...data.getPosts];\r\n        values.body = words;\r\n        console.log(posts)\r\n        proxy.writeQuery({ query: FETCH_POSTS_QUERY, data: { getPosts: posts } });\r\n        \r\n        \r\n    },\r\n    onError(err){\r\n        return err;\r\n    }\r\n})\r\n\r\n  function createPostCallback() {\r\n    setConfirmOpen(false)\r\n    values.body = donationScript\r\n    createPost();\r\n  }\r\n  \r\n  console.log(values.body)\r\n  console.log(values)\r\n  console.log(username+' donated $'+Math.round(values.body *100)/100+' to the '+value+\"!\")\r\n  let words = \"Are you sure you want to donate $\"+values.body+\" to \"+value+\"?\";\r\n let donationScript = username+\" donated $\"+values.body+\" to \"+value+\"!\"\r\n  return (\r\n    <div style={{width:\"30rem\", margin:\"3rem auto 3rem auto\",background:\"\", borderRadius:\"0.5rem\"}}>\r\n      <Form className=\"ui form\" onSubmit={() => setConfirmOpen(true)}>\r\n        <h2>Donate to a Foundation:</h2>\r\n        <Form.Field>\r\n        <Form.Radio\r\n            label='Wolfo Wildlife Preserve'\r\n            value ='wwp'\r\n            checked={value === 'Wolfo Wildlife Preserve'}\r\n            onChange={handleChange}\r\n          />\r\n           <Form.Radio\r\n            label='Goldies Fish Swimmy Conservative'\r\n            value ='gfsc'\r\n            checked={value === 'Goldies Fish Swimmy Conservative'}\r\n            onChange={handleChange}\r\n          />\r\n          <Form.Radio\r\n            label='Air Boy Cleaner Corp.'\r\n            value ='abcc'\r\n            checked={value === 'Air Boy Cleaner Corp'}\r\n            onChange={handleChange}\r\n          />\r\n          <Form.Input\r\n            placeholder=\"$.$$\"\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            name=\"body\"\r\n            onChange={onChange}\r\n            value={values.body}\r\n            error={error ? true : false}\r\n          />\r\n          <Button animated type=\"submit\" color=\"green\">\r\n          <Button.Content visible>Donate</Button.Content>\r\n      <Button.Content hidden>\r\n      <Icon name='arrow right' />\r\n      </Button.Content>\r\n          </Button>\r\n        </Form.Field>\r\n      </Form>\r\n      <Confirm\r\n        open={confirmOpen}\r\n        onCancel={() => setConfirmOpen(false)}\r\n        content ={words}\r\n        onConfirm={createPostCallback}\r\n    />\r\n      {error && (\r\n        <div className=\"ui error message\" style={{ marginBottom: 20 }}>\r\n          <ul className=\"list\">\r\n            <li>{console.log(JSON.stringify(error, null, 2))}</li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CREATE_POST_MUTATION = gql`\r\n  mutation createPost($title: String!, $img: String ,$body: String!) {\r\n    createPost( title: $title, img: $img ,body: $body) {\r\n      id\r\n      title\r\n      img\r\n      body\r\n      createdAt\r\n      causes\r\n      username\r\n      likes {\r\n        id\r\n        username\r\n        createdAt\r\n      }\r\n      likeCount\r\n      comments {\r\n        id\r\n        body\r\n        username\r\n        createdAt\r\n      }\r\n      commentCount\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Donations;",{"ruleId":"130","severity":1,"message":"131","line":2,"column":17,"nodeType":"132","messageId":"133","endLine":2,"endColumn":27},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":39,"column":6,"nodeType":"140","endLine":39,"endColumn":8,"suggestions":"141"},{"ruleId":"134","replacedBy":"142"},{"ruleId":"136","replacedBy":"143"},{"ruleId":"130","severity":1,"message":"144","line":2,"column":31,"nodeType":"132","messageId":"133","endLine":2,"endColumn":38},{"ruleId":"130","severity":1,"message":"145","line":2,"column":46,"nodeType":"132","messageId":"133","endLine":2,"endColumn":50},{"ruleId":"130","severity":1,"message":"146","line":2,"column":52,"nodeType":"132","messageId":"133","endLine":2,"endColumn":56},{"ruleId":"130","severity":1,"message":"147","line":2,"column":65,"nodeType":"132","messageId":"133","endLine":2,"endColumn":69},{"ruleId":"130","severity":1,"message":"148","line":2,"column":71,"nodeType":"132","messageId":"133","endLine":2,"endColumn":80},{"ruleId":"130","severity":1,"message":"149","line":23,"column":17,"nodeType":"132","messageId":"133","endLine":23,"endColumn":23},{"ruleId":"130","severity":1,"message":"150","line":27,"column":5,"nodeType":"132","messageId":"133","endLine":27,"endColumn":12},{"ruleId":"151","severity":1,"message":"152","line":112,"column":78,"nodeType":"153","messageId":"154","endLine":112,"endColumn":79},{"ruleId":"130","severity":1,"message":"155","line":9,"column":8,"nodeType":"132","messageId":"133","endLine":9,"endColumn":13},{"ruleId":"134","replacedBy":"156"},{"ruleId":"136","replacedBy":"157"},{"ruleId":"130","severity":1,"message":"158","line":2,"column":24,"nodeType":"132","messageId":"133","endLine":2,"endColumn":28},{"ruleId":"130","severity":1,"message":"159","line":2,"column":9,"nodeType":"132","messageId":"133","endLine":2,"endColumn":15},{"ruleId":"130","severity":1,"message":"144","line":2,"column":31,"nodeType":"132","messageId":"133","endLine":2,"endColumn":38},{"ruleId":"130","severity":1,"message":"145","line":2,"column":46,"nodeType":"132","messageId":"133","endLine":2,"endColumn":50},{"ruleId":"130","severity":1,"message":"146","line":2,"column":52,"nodeType":"132","messageId":"133","endLine":2,"endColumn":56},{"ruleId":"130","severity":1,"message":"160","line":2,"column":58,"nodeType":"132","messageId":"133","endLine":2,"endColumn":63},{"ruleId":"130","severity":1,"message":"147","line":2,"column":65,"nodeType":"132","messageId":"133","endLine":2,"endColumn":69},{"ruleId":"130","severity":1,"message":"148","line":2,"column":71,"nodeType":"132","messageId":"133","endLine":2,"endColumn":80},{"ruleId":"130","severity":1,"message":"161","line":7,"column":10,"nodeType":"132","messageId":"133","endLine":7,"endColumn":24},{"ruleId":"130","severity":1,"message":"162","line":11,"column":8,"nodeType":"132","messageId":"133","endLine":11,"endColumn":16},{"ruleId":"130","severity":1,"message":"163","line":19,"column":10,"nodeType":"132","messageId":"133","endLine":19,"endColumn":14},{"ruleId":"130","severity":1,"message":"164","line":19,"column":16,"nodeType":"132","messageId":"133","endLine":19,"endColumn":23},{"ruleId":"130","severity":1,"message":"165","line":20,"column":11,"nodeType":"132","messageId":"133","endLine":20,"endColumn":15},{"ruleId":"130","severity":1,"message":"149","line":20,"column":17,"nodeType":"132","messageId":"133","endLine":20,"endColumn":23},{"ruleId":"130","severity":1,"message":"150","line":28,"column":5,"nodeType":"132","messageId":"133","endLine":28,"endColumn":12},{"ruleId":"130","severity":1,"message":"166","line":35,"column":5,"nodeType":"132","messageId":"133","endLine":35,"endColumn":16},{"ruleId":"151","severity":1,"message":"152","line":50,"column":46,"nodeType":"153","messageId":"154","endLine":50,"endColumn":47},{"ruleId":"151","severity":1,"message":"152","line":53,"column":34,"nodeType":"153","messageId":"154","endLine":53,"endColumn":35},{"ruleId":"151","severity":1,"message":"152","line":71,"column":78,"nodeType":"153","messageId":"154","endLine":71,"endColumn":79},{"ruleId":"130","severity":1,"message":"167","line":10,"column":29,"nodeType":"132","messageId":"133","endLine":10,"endColumn":37},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","no-native-reassign",["168"],"no-negated-in-lhs",["169"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'postsFromDB' and 'save'. Either include them or remove the dependency array. If 'save' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["170"],["168"],["169"],"'Divider' is defined but never used.","'Icon' is defined but never used.","'Card' is defined but never used.","'Form' is defined but never used.","'Container' is defined but never used.","'logout' is assigned a value but never used.","'loading' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'PopUp' is defined but never used.",["168"],["169"],"'Flag' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'SAVE_ALL_POSTS' is defined but never used.","'PostForm' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'user' is assigned a value but never used.","'Globalposts' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},"Update the dependencies array to be: [postsFromDB, save]",{"range":"173","text":"174"},[1011,1013],"[postsFromDB, save]"]