[{"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\index.js":"1","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\App.js":"2","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\MenuBar.js":"3","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\ApolloProvider.js":"4","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\util\\AuthRoute.js":"5","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Home.js":"6","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\redux\\reducer.js":"7","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Login.js":"8","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Register.js":"9","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\UserPage.js":"10","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\context\\auth.js":"11","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\PostCard.js":"12","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\PostForm.js":"13","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\util\\hooks.js":"14","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\redux\\actions.js":"15","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\util\\graphql.js":"16","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\WeatherBar.js":"17"},{"size":203,"mtime":1611600698609,"results":"18","hashOfConfig":"19"},{"size":1128,"mtime":1611600698596,"results":"20","hashOfConfig":"21"},{"size":1827,"mtime":1611600698599,"results":"22","hashOfConfig":"21"},{"size":918,"mtime":1611600698590,"results":"23","hashOfConfig":"19"},{"size":436,"mtime":1611600698625,"results":"24","hashOfConfig":"19"},{"size":2084,"mtime":1611605063488,"results":"25","hashOfConfig":"19"},{"size":730,"mtime":1611600698619,"results":"26","hashOfConfig":"19"},{"size":2291,"mtime":1611600698613,"results":"27","hashOfConfig":"19"},{"size":4137,"mtime":1611600698615,"results":"28","hashOfConfig":"19"},{"size":4105,"mtime":1611602008419,"results":"29","hashOfConfig":"19"},{"size":1337,"mtime":1611600698605,"results":"30","hashOfConfig":"19"},{"size":972,"mtime":1611600698601,"results":"31","hashOfConfig":"19"},{"size":2599,"mtime":1611601908377,"results":"32","hashOfConfig":"19"},{"size":415,"mtime":1611600698627,"results":"33","hashOfConfig":"19"},{"size":92,"mtime":1611600698619,"results":"34","hashOfConfig":"19"},{"size":374,"mtime":1611600698625,"results":"35","hashOfConfig":"19"},{"size":2668,"mtime":1611618301216,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1vpxveh",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"oqu5ia",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\index.js",[],["78","79"],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\App.js",[],["80","81"],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\MenuBar.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\ApolloProvider.js",[],["82","83"],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\util\\AuthRoute.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Home.js",["84","85","86"],"import React, { useContext, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport WeatherBar from '../components/WeatherBar'\r\n\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { Grid,  Divider} from 'semantic-ui-react'\r\nimport { AuthContext } from '../context/auth';\r\nimport PostCard from '../components/PostCard';\r\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\r\nimport {connect} from 'react-redux'\r\nimport { SAVE_ALL_POSTS } from '../redux/actions';\r\n\r\n\r\nlet Globalposts =[]\r\nlet weather ={}\r\n\r\n\r\nconst  Home = ({posts = [], save}) => {\r\n  const { user } = useContext(AuthContext);\r\n  const {\r\n    loading,\r\n    data: { getPosts: postsFromDB } = {}\r\n    } = useQuery(FETCH_POSTS_QUERY);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    Globalposts = postsFromDB\r\n    save({type: SAVE_ALL_POSTS })\r\n\r\n\r\n    axios\r\n    .get(\r\n      \"http://api.airvisual.com/v2/nearest_city?key=a151e02a-8442-4f12-8b56-5a7bf4b9d8e1\"\r\n    )\r\n    .then((res) => weather = res.data)\r\n    .catch((err) => this.setState({ error: true }));\r\n    \r\n  \r\n  console.log(\"weather data\",weather)\r\n  })\r\n\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n      <WeatherBar weatherStuff={weather} /> \r\n      <Grid.Row className=\"page-title\">\r\n        <h1>Trending.....</h1>\r\n      </Grid.Row>\r\n      <Divider section />\r\n      <Grid.Column centered columns={4}>\r\n        {loading ? (\r\n          <h1>Loading posts..</h1>\r\n        ) : ( \r\n          <>\r\n            { console.log(posts),\r\n              posts.map((post) => (\r\n                \r\n                <div key={post.id}  >\r\n                  <Grid>\r\n                  <PostCard post={post} />\r\n                  </Grid>\r\n                </div>\r\n              ))}\r\n          </> \r\n          \r\n        )}\r\n      </Grid.Column>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => (console.log(\"state is: \",state),{\r\n  posts: state.posts\r\n});\r\nconst mapDispatchToProps = (dispatch) => { \r\n  return {\r\n     save: () => dispatch({ type:SAVE_ALL_POSTS, payload:Globalposts}),\r\n     }\r\n }\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\redux\\reducer.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Login.js",[],["87","88"],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\Register.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\pages\\UserPage.js",["89","90","91","92","93"],"import React, {useState, useContext} from 'react'\r\nimport {Button, Grid, Header, Divider, Image,Icon, Card, Modal, Form, Container} from 'semantic-ui-react'\r\nimport '../App.css'\r\nimport { connect } from 'react-redux'\r\nimport PostCard from '../components/PostCard';\r\nimport PostForm from '../components/PostForm';\r\nimport { AuthContext } from '../context/auth';\r\n\r\nfunction UsersPage({posts=[]}) {\r\n  const [open, setOpen] = useState(false)\r\n  const { user, logout } = useContext(AuthContext);\r\n\r\n\r\n\r\nreturn (\r\n    <div>\r\n    <Header as='h2' icon textAlign='center'>\r\n        <Image src='https://react.semantic-ui.com/images/avatar/small/molly.png' circular />\r\n        <Header.Content>{user ? user.username : null}</Header.Content>\r\n    </Header>\r\n    <Grid>\r\n      \r\n    <Grid.Column textAlign= 'center'>\r\n    <Modal\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      trigger={\r\n        <Button \r\n        >Update Info</Button>}\r\n      >\r\n      <Modal.Header>Update Your Information</Modal.Header>\r\n      <Form /*onSubmit={onSubmit}*/ noValidate>\r\n        <Container textAlign= 'center' id =\"update\">\r\n        \r\n            <Form.Input\r\n                label =\"Username\"\r\n                placeholder = \"..\"\r\n                value = {user ? user.username : null} //make this username\r\n                type = \"text\"  \r\n             /> \r\n             <Form.Input\r\n                label =\"Email\"\r\n                placeholder = \"....\"\r\n                value = {user ? user.email : null} //make this email\r\n                type = \"text\"  \r\n             /> \r\n            <Form.Input\r\n                label =\"Password\"\r\n                placeholder = \"Password...\"\r\n                value = \"....\"  //make this password\r\n                type = \"password\"  \r\n             /> \r\n            <Form.Input\r\n                label =\"Confirm Password\"\r\n                placeholder = \"Confirm Password...\"\r\n                value = \"MollyMoo\" //make this the same as password\r\n                type = \"password\"  \r\n             /> \r\n        </Container>\r\n      </Form>\r\n      <Modal.Actions>\r\n        <Button color='black' onClick={() => setOpen(false)}>\r\n          No\r\n        </Button>\r\n        <Button\r\n          content=\"Yes\"\r\n          labelPosition='right'\r\n          icon='checkmark'\r\n          onClick={() => setOpen(false)}//make this actually update stuff\r\n          positive\r\n        />\r\n      </Modal.Actions>\r\n      \r\n    </Modal>\r\n    </Grid.Column> \r\n    </Grid>\r\n    <Divider section />\r\n    <PostForm />\r\n    <Divider section />\r\n    {/* \r\n    <Grid>\r\n    <Grid.Column textAlign= 'center'>\r\n      <Form>\r\n      <Form.Input \r\n      label=\"Title\"\r\n      placeholder=\"Enter a Title\"\r\n      name = \"title\"\r\n      type = \"text\"\r\n      />\r\n\r\n      <Form.Input \r\n      label=\"Topic\"\r\n      placeholder=\"Enter a Topic\"\r\n      name = \"topic\"\r\n      type = \"text\"\r\n      />\r\n\r\n      <Form.TextArea \r\n      label=\"Body\"\r\n      placeholder=\"\"\r\n      name = \"title\"\r\n      type = \"text\"\r\n      />\r\n\r\n      <Button \r\n      onClick={()=>{console.log(\"hi\")}}\r\n      animated\r\n      floated='right'\r\n      >\r\n      <Button.Content visible>Post</Button.Content>\r\n      <Button.Content hidden>\r\n      <Icon name='arrow right' />\r\n      </Button.Content>\r\n      </Button>\r\n      </Form>\r\n      </Grid.Column>\r\n      </Grid>\r\n\r\n    <Divider section /> */}\r\n\r\n\r\n    <Grid.Column centered columns={4}>   \r\n          <>\r\n            { \r\n              posts.map((post) => (\r\n                post.username === user.username ?\r\n                <div key={post.id}  >\r\n                  <Grid>\r\n                  <PostCard post={post} />\r\n                  </Grid>\r\n                </div> : null\r\n              ))}\r\n          </> \r\n      </Grid.Column>\r\n     \r\n\r\n</div>\r\n    \r\n)\r\n}\r\nconst mapStateToProps = (state, ownProps) => (console.log(\"state is: \",state),{\r\n  posts: state.posts\r\n});\r\nconst mapDispatchToProps = (dispatch) => { \r\n  return {\r\n     //save: () => dispatch({ type:SAVE_ALL_POSTS, payload:Globalposts}),\r\n     }\r\n }\r\n\r\n\r\nexport default connect (mapStateToProps)(UsersPage)","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\context\\auth.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\PostCard.js",["94","95","96","97","98","99","100","101","102","103","104"],"import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {Button, Grid, Header, Divider, Image,Icon, Card, Modal, Form, Container} from 'semantic-ui-react'\r\nimport { AuthContext } from '../context/auth';\r\n\r\n\r\n\r\n\r\nfunction PostCard({\r\n  post: {title,causes, body,img, createdAt, id, username, likeCount, commentCount, likes }\r\n}) {\r\n  const { user } = useContext(AuthContext);\r\n  return (\r\n    <>\r\n\r\n        <Card id = \"templates\" className = 'ui centered card'>\r\n          <Card.Content>\r\n             <Image\r\n            floated='left'\r\n            size= 'tiny'\r\n            src={img}\r\n            circular\r\n            />\r\n            <Card.Header>{title}</Card.Header>\r\n            <Card.Meta>{username}</Card.Meta>\r\n            <Card.Description>\r\n            <div>{body}</div>\r\n            </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PostCard;","C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\PostForm.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\util\\hooks.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\redux\\actions.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\util\\graphql.js",[],"C:\\Users\\Owner\\Documents\\assignments\\Cap-Stone\\Cap-Stone-TTP-frontend\\src\\components\\WeatherBar.js",["105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"106","replacedBy":"110"},{"ruleId":"108","replacedBy":"111"},{"ruleId":"106","replacedBy":"112"},{"ruleId":"108","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":20,"column":11,"nodeType":"116","messageId":"117","endLine":20,"endColumn":15},{"ruleId":"118","severity":1,"message":"119","line":58,"column":33,"nodeType":"120","messageId":"121","endLine":58,"endColumn":34},{"ruleId":"118","severity":1,"message":"119","line":76,"column":78,"nodeType":"120","messageId":"121","endLine":76,"endColumn":79},{"ruleId":"106","replacedBy":"122"},{"ruleId":"108","replacedBy":"123"},{"ruleId":"114","severity":1,"message":"124","line":2,"column":46,"nodeType":"116","messageId":"117","endLine":2,"endColumn":50},{"ruleId":"114","severity":1,"message":"125","line":2,"column":52,"nodeType":"116","messageId":"117","endLine":2,"endColumn":56},{"ruleId":"114","severity":1,"message":"126","line":11,"column":17,"nodeType":"116","messageId":"117","endLine":11,"endColumn":23},{"ruleId":"118","severity":1,"message":"119","line":142,"column":78,"nodeType":"120","messageId":"121","endLine":142,"endColumn":79},{"ruleId":"114","severity":1,"message":"127","line":145,"column":7,"nodeType":"116","messageId":"117","endLine":145,"endColumn":25},{"ruleId":"114","severity":1,"message":"128","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":14},{"ruleId":"114","severity":1,"message":"129","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":14},{"ruleId":"114","severity":1,"message":"130","line":4,"column":9,"nodeType":"116","messageId":"117","endLine":4,"endColumn":15},{"ruleId":"114","severity":1,"message":"131","line":4,"column":17,"nodeType":"116","messageId":"117","endLine":4,"endColumn":21},{"ruleId":"114","severity":1,"message":"132","line":4,"column":23,"nodeType":"116","messageId":"117","endLine":4,"endColumn":29},{"ruleId":"114","severity":1,"message":"133","line":4,"column":31,"nodeType":"116","messageId":"117","endLine":4,"endColumn":38},{"ruleId":"114","severity":1,"message":"124","line":4,"column":46,"nodeType":"116","messageId":"117","endLine":4,"endColumn":50},{"ruleId":"114","severity":1,"message":"134","line":4,"column":58,"nodeType":"116","messageId":"117","endLine":4,"endColumn":63},{"ruleId":"114","severity":1,"message":"135","line":4,"column":65,"nodeType":"116","messageId":"117","endLine":4,"endColumn":69},{"ruleId":"114","severity":1,"message":"136","line":4,"column":71,"nodeType":"116","messageId":"117","endLine":4,"endColumn":80},{"ruleId":"114","severity":1,"message":"115","line":13,"column":11,"nodeType":"116","messageId":"117","endLine":13,"endColumn":15},{"ruleId":"114","severity":1,"message":"137","line":2,"column":24,"nodeType":"116","messageId":"117","endLine":2,"endColumn":28},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],["138"],["139"],["138"],["139"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["138"],["139"],"'Icon' is defined but never used.","'Card' is defined but never used.","'logout' is assigned a value but never used.","'mapDispatchToProps' is assigned a value but never used.","'Link' is defined but never used.","'moment' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'Header' is defined but never used.","'Divider' is defined but never used.","'Modal' is defined but never used.","'Form' is defined but never used.","'Container' is defined but never used.","'Flag' is defined but never used.","no-global-assign","no-unsafe-negation"]